{
  "tech_stack": [
    "Python",
    "Flask",
    "React",
    "TypeScript",
    "Vite",
    "Supabase",
    "YOLOv8",
    "OpenCV",
    "PostgreSQL"
  ],
  "features": [
    {
      "name": "Health Check API",
      "description": "Health check endpoint to verify server status and model loading",
      "files": ["backend/app.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Health Check API",
          "version": "1.0.0"
        },
        "paths": {
          "/health": {
            "get": {
              "summary": "Health check endpoint",
              "responses": {
                "200": {
                  "description": "Server health status",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "status": {"type": "string"},
                          "model_loaded": {"type": "boolean"},
                          "results_dir": {"type": "string"}
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Traffic Violation Analysis API",
      "description": "Main API endpoint for analyzing images and videos for traffic violations using YOLO model",
      "files": ["backend/app.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Traffic Violation Analysis API",
          "version": "1.0.0"
        },
        "paths": {
          "/analyze": {
            "post": {
              "summary": "Analyze image or video for traffic violations",
              "requestBody": {
                "content": {
                  "multipart/form-data": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "file": {
                          "type": "string",
                          "format": "binary",
                          "description": "Image or video file to analyze"
                        }
                      },
                      "required": ["file"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Analysis results",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "type": {"type": "string", "enum": ["image", "video"]},
                          "violation": {"type": "boolean"},
                          "violation_type": {"type": "string"},
                          "timestamp": {"type": "string"},
                          "file_url": {"type": "string"},
                          "image_base64": {"type": "string", "description": "Base64 encoded annotated image (for image type only)"}
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "Bad request - invalid file or missing file",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "error": {"type": "string"}
                        }
                      }
                    }
                  }
                },
                "500": {
                  "description": "Internal server error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "error": {"type": "string"}
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Results File Serving API",
      "description": "Serves processed result files (images/videos) from the results directory",
      "files": ["backend/app.py"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Results File Serving API",
          "version": "1.0.0"
        },
        "paths": {
          "/results/{filename}": {
            "get": {
              "summary": "Serve result files",
              "parameters": [
                {
                  "name": "filename",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string"
                  },
                  "description": "Name of the result file to serve"
                }
              ],
              "responses": {
                "200": {
                  "description": "File content",
                  "content": {
                    "image/jpeg": {
                      "schema": {
                        "type": "string",
                        "format": "binary"
                      }
                    },
                    "video/mp4": {
                      "schema": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                },
                "404": {
                  "description": "File not found"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Supabase Edge Function Detection API",
      "description": "Simulated detection processing endpoint for traffic violations",
      "files": ["src/supabase/functions/server/index.tsx"],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Supabase Edge Function Detection API",
          "version": "1.0.0"
        },
        "paths": {
          "/make-server-10238d4d/detect": {
            "post": {
              "summary": "Process detection for traffic violations",
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "filename": {"type": "string"},
                        "fileType": {"type": "string"}
                      },
                      "required": ["filename", "fileType"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Detection results",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {"type": "boolean"},
                          "detections": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {"type": "string"},
                                "confidence": {"type": "number"},
                                "bbox": {
                                  "type": "object",
                                  "properties": {
                                    "x": {"type": "number"},
                                    "y": {"type": "number"},
                                    "width": {"type": "number"},
                                    "height": {"type": "number"}
                                  }
                                }
                              }
                            }
                          },
                          "processedAt": {"type": "string"}
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "Unauthorized"
                },
                "500": {
                  "description": "Internal server error"
                }
              }
            }
          }
        },
        "components": {
          "securitySchemes": {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        }
      }
    }
  ]
}

